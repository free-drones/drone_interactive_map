# -*- coding: utf-8 -*-
#
# Configuration file for the Sphinx documentation builder.
#
# This file does only contain a selection of the most common options. For a
# full list see the documentation:
# http://www.sphinx-doc.org/en/master/config

# -- Path setup --------------------------------------------------------------

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
import os
import sys
# sys.path.insert(0, os.path.abspath('.'))
sys.path.append(os.path.abspath("./_ext"))

def get_version_from_git(path: str):
    try:
        import git
        repo = git.Repo(path)
        return repo.git.describe(['--tags', '--abbrev=7', '--match=v*.*']).replace('-', '.post', 1)
    except:
        return 'unknown'

def get_version_from_git_submodule(path: str, sub_path: str):
    try:
        import git
        repo = git.Repo(path)
        sha = repo.git.execute(['git', 'ls-tree', 'HEAD', sub_path]).split()[2]
    except:
        return 'unknown'

    try:
        repo = git.Repo(path + sub_path)
        return repo.git.describe(['--tags', '--abbrev=7', '--match=v*.*', sha]).replace('-', '.post', 1)
    except:
        return sha

# -- Project information -----------------------------------------------------

project = 'RISE Drone Platform'
copyright = '2021, Andreas Gising, Lennart Ochel'
author = 'Andreas Gising, Lennart Ochel'

# The short X.Y version
version = get_version_from_git('../../')
# The full version, including alpha/beta/rc tags
release = version

rst_epilog  = '.. |version-ardupilot| replace:: {versionnum}\n'.format(versionnum=get_version_from_git_submodule('../../', 'src/companion_computer/ardupilot/'))
rst_epilog += '.. |version-dji| replace:: {versionnum}\n'.format(versionnum=get_version_from_git_submodule('../../', 'src/companion_computer/dji/'))

# -- General configuration ---------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    'compatibility',
    'sphinx.ext.todo',
    'sphinxcontrib.mermaid' #pip3 install sphinxcontrib-mermaid
]

# https://sphinxcontrib-mermaid-demo.readthedocs.io/en/latest/#config-values
# mermaid_output_format = 'png'
# mermaid_cmd = os.path.expanduser('~') + '/node_modules/.bin/mmdc'
mermaid_cmd = os.path.expanduser('~') + '/.npm/bin/mmdc'

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
# source_suffix = ['.rst', '.md']
source_suffix = '.rst'

# The master toctree document.
master_doc = 'index'

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = None

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
exclude_patterns = [
    'api/*'
]

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = None


# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = 'alabaster'

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#
# html_theme_options = {}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']

# Custom sidebar templates, must be a dictionary that maps document names
# to template names.
#
# The default sidebars (for documents that don't match any pattern) are
# defined by theme itself.  Builtin themes are using these templates by
# default: ``['localtoc.html', 'relations.html', 'sourcelink.html',
# 'searchbox.html']``.
#
# html_sidebars = {}

# The name of an image file (relative to this directory) to place at the top of
# the title page.
html_logo = 'images/logo-rise-html.png'


# -- Options for HTMLHelp output ---------------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = 'RISEDronePlatformdoc'


# -- Options for LaTeX output ------------------------------------------------

latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    #
    # 'papersize': 'letterpaper',

    # The font size ('10pt', '11pt' or '12pt').
    #
    # 'pointsize': '10pt',

    # Additional stuff for the LaTeX preamble.
    #
    # 'preamble': '',

    # Latex figure (float) alignment
    #
    # 'figure_align': 'htbp',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    (master_doc, 'RISEDronePlatform.tex', 'RISE Drone Platform Documentation',
     'Andreas Gising, Lennart Ochel', 'manual'),
]

# The name of an image file (relative to this directory) to place at the top of
# the title page.
latex_logo = 'images/logo-rise-pdf.png'


# -- Options for manual page output ------------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    (master_doc, 'risedroneplatform', 'RISE Drone Platform Documentation',
     [author], 1)
]


# -- Options for Texinfo output ----------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (master_doc, 'RISEDronePlatform', 'RISE Drone Platform Documentation',
     author, 'RISEDronePlatform', 'One line description of project.',
     'Miscellaneous'),
]


# -- Options for Epub output -------------------------------------------------

# Bibliographic Dublin Core info.
epub_title = project

# The unique identifier of the text. This can be a ISBN number
# or the project homepage.
#
# epub_identifier = ''

# A unique identification for the text.
#
# epub_uid = ''

# A list of files that should not be packed into the epub file.
epub_exclude_files = ['search.html']


# -- todo settings -----------------------------------------------------------

# If this is True, todo and todolist produce output, else they produce
# nothing. The default is False.
todo_include_todos = True

# If this is True, todo emits a warning for each TODO entries. The
# default is False.
todo_emit_warnings = False

# If this is True, todolist produce output without file path and line,
# The default is False.
todo_link_only = True
